{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-mpx",
    "description": "Mpox metagenomics assembly.",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-mpx/wf-mpx-demo.tar.gz",
    "aws_demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-mpx/wf-mpx-demo/aws.nextflow.config",
    "url": "https://github.com/epi2me-labs/wf-mpx",
    "type": "object",
    "definitions": {
        "input": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-right",
            "description": "Parameters for finding and handling input data for analysis.",
            "properties": {
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "title": "FASTQ",
                    "description": "FASTQ files to use in the analysis.",
                    "help_text": "This accepts one of three cases: (i) the path to a single FASTQ file; (ii) the path to a top-level directory containing FASTQ files; (iii) the path to a directory containing one level of sub-directories which in turn contain FASTQ files. In the first and second case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes."
                },
                "reference": {
                    "type": "string",
                    "description": "The reference genome to use for mapping.",
                    "help_text": "We provide four popular mpox reference sequences with which to map your reads to. More information can be found here: https://labs.epi2me.io/basic-mpox-workflow",
                    "enum": [
                        "MN648051.1",
                        "MT903344.1",
                        "ON568298.1",
                        "ON563414.1"
                    ],
                    "default": "MT903344.1"
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "default": false,
                    "title": "Analyse unclassified reads",
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                }
            },
            "required": [
                "fastq"
            ]
        },
        "samples": {
            "title": "Sample Options",
            "type": "object",
            "fa_icon": "fas fa-vials",
            "description": "Parameters that relate to samples such as sample sheets and sample names.",
            "properties": {
                "sample": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
                }
            }
        },
        "output": {
            "title": "Output Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-left",
            "description": "Parameters for saving and naming workflow outputs.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all workflow results."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced Options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Advanced options for configuring processes inside the workflow.",
            "help_text": "These advanced options do not need to be changed for typical use, but allow fine tuning of workflows for users who want more control over the workflow.",
            "properties": {
                "assembly": {
                    "type": "boolean",
                    "description": "Perform assembly with flye.",
                    "help_text": "Take the reads mapped to the mpx reference and perform a de novo assembly using flye. This might be useful to uncover any structural variation not present in your chosen reference genome. Turning off will reduce run times and computational intensity at the expense of not being able to identify structural variants.",
                    "default": true
                },
                "min_coverage": {
                    "type": "number",
                    "title": "Minimum coverage",
                    "description": "Coverage threshold for masking in the consensus step.",
                    "help_text": "Regions with less than the coverage entered here are masked (nucleotide sequences will be replaced with N) when generating the consensus. It might be useful to decrease this value if you have very low coverage, but this will affect the quality of your consensus sequence.",
                    "min": 1,
                    "default": 20
                },
                "medaka_options": {
                    "type": "string",
                    "description": "Pass through options to `medaka_consensus` during assembly.",
                    "help_text": "Only applicable when flye assembly is used (default). You can use this field to give `medaka_consensus` command line options for the assembly process of the workflow. For example, you could change the model by entering `\"-m r941_min_high_g303\"`. The full string of options should be quoted as in the example."
                },
                "align_threads": {
                    "type": "integer",
                    "title": "Alignment threads",
                    "description": "Number of CPU threads to use per alignment task.",
                    "help_text": "The total CPU resource used by the workflow is constrained by the executor configuration.",
                    "min": 1,
                    "default": 4
                },
                "assembly_threads": {
                    "type": "integer",
                    "description": "Number of CPU threads to use per assembly task.",
                    "help_text": "The total CPU resource used by the workflow is constrained by the executor configuration.",
                    "min": 1,
                    "default": 4
                }
            }
        },
        "misc": {
            "title": "Miscellaneous Options",
            "type": "object",
            "description": "Everything else.",
            "default": "",
            "properties": {
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input"
        },
        {
            "$ref": "#/definitions/samples"
        },
        {
            "$ref": "#/definitions/output"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/misc"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "_reference": {
            "type": "string",
            "hidden": true
        },
        "_genbank": {
            "type": "string",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis workflow provides a simple way to analyse mpox sequencing data; taking\nraw Oxford Nanopore Technologies reads and creating a draft consensus and assembly.\n\nWe expect data to be generated from a mixed population sample hence the use of the term \"metagenomics\".\n\n> No trimming of sequences is carried out so be vigilant when using targeted data.\n\nUsing community-develped tools, this workflow:\n* Maps reads to a reference genome (`minimap2`)\n* Assesses coverage\n* Discards reads not mapping to the chosen reference\n* Calls variants with resepect to the reference (`medaka`)\n* Filters variants with <20x coverage\n* Creates a draft consensus (`bcftools`)\n* Creats a de-novo assembly (`flye` & `medaka`)\n\nMore information can be found in this [blog post](https://labs.epi2me.io/basic-mpox-workflow).\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [singularity](https://docs.sylabs.io/guides/3.0/user-guide/index.html)\n"
    }
}